<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.rainsoil</groupId>
	<artifactId>rainsoil-hub</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<modules>
		<module>rainsoil-common</module>
		<module>rainsoil-core</module>
		<module>rainsoil-system</module>
	</modules>

	<properties>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<spring-cloud-alibaba.version>2.2.1.RELEASE</spring-cloud-alibaba.version>
		<spring-boot.version>2.2.5.RELEASE</spring-boot.version>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<git.commit.version>2.2.5</git.commit.version>
		<spring.checkstyle.version>0.0.28</spring.checkstyle.version>
		<swagger.version>1.6.2</swagger.version>
		<hutool.version>5.7.11</hutool.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>findbugs</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.14</version>
		</dependency>


	</dependencies>

	<dependencyManagement>

		<dependencies>


			<!-- 阿里数据库连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>1.2.8</version>
			</dependency>

			<!--常用工具类 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.12.0</version>
			</dependency>
			<!-- io常用工具类 -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.11.0</version>
			</dependency>

			<!-- 文件上传工具类 -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.4</version>
			</dependency>

			<!-- yml解析器 -->
			<dependency>
				<groupId>org.yaml</groupId>
				<artifactId>snakeyaml</artifactId>
				<version>1.28</version>
			</dependency>
			<!-- 验证码 -->
			<dependency>
				<groupId>com.github.penggle</groupId>
				<artifactId>kaptcha</artifactId>
				<version>2.3.2</version>
				<exclusions>
					<exclusion>
						<artifactId>javax.servlet-api</artifactId>
						<groupId>javax.servlet</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.alibaba/easyexcel -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>easyexcel</artifactId>
				<version>3.0.0-beta3</version>
			</dependency>
			<!-- excel工具 -->
			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>3.17</version>
			</dependency>
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-boot-starter</artifactId>
				<version>3.4.3</version>
			</dependency>
			<!--mybatis plus-->
			<dependency>
				<groupId>com.baomidou</groupId>
				<artifactId>mybatis-plus-extension</artifactId>
				<version>3.4.3</version>
			</dependency>
			<!-- druid 连接池 -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.2.8</version>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>1.14.2</version>
			</dependency>

			<!--TTL-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>transmittable-thread-local</artifactId>
				<version>2.11.4</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>2.10.2</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>4.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.32</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>cn.hutool</groupId>
				<artifactId>hutool-all</artifactId>
				<version>${hutool.version}</version>
			</dependency>
			<dependency>
				<groupId>com.rainsoil.common</groupId>
				<artifactId>rainsoil-common-dependencies</artifactId>
				<version>1.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!--代码格式插件，默认使用spring 规则-->
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<version>${spring.checkstyle.version}</version>
			</plugin>
			<!--打包关联最新 git commit 信息插件-->
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${git.commit.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>3.0.0</version>
			</plugin>

			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>3.0.0</version>
				<configuration>
					<!-- 配置文件的路径，在style文件夹下 -->
					<configLocation>style/checkstyle.xml</configLocation>
					<encoding>UTF-8</encoding>

					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<includeTestSourceDirectory>false</includeTestSourceDirectory>
				</configuration>
				<executions>
					<execution>
						<!-- 绑定pmd:pmd到validate生命周期，在validate时会自动进行代码规范检查 -->
						<id>validate</id>
						<phase>validate</phase>

						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 编码规约扫描命令： mvn pmd:pmd-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.8</version>
				<configuration>
					<rulesets>
						<ruleset>rulesets/java/ali-comment.xml</ruleset>
						<!--						<ruleset>rulesets/java/ali-concurrent.xml</ruleset>-->
						<ruleset>rulesets/java/ali-constant.xml</ruleset>
						<ruleset>rulesets/java/ali-exception.xml</ruleset>
						<ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
						<ruleset>rulesets/java/ali-naming.xml</ruleset>
						<ruleset>rulesets/java/ali-oop.xml</ruleset>
						<ruleset>rulesets/java/ali-orm.xml</ruleset>
						<ruleset>rulesets/java/ali-other.xml</ruleset>
						<ruleset>rulesets/java/ali-set.xml</ruleset>
					</rulesets>
					<!-- enable incremental analysis -->
					<analysisCache>true</analysisCache>
					<!-- analysisCacheLocation: optional - points to the following location by default -->
					<analysisCacheLocation>${project.build.directory}/pmd/pmd.cache</analysisCacheLocation>
					<!-- failOnViolation is actually true by default, but can be disabled-->
					<failOnViolation>false</failOnViolation>
					<!-- printFailingErrors is pretty useful-->
					<printFailingErrors>true</printFailingErrors>
					<sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
					<linkXRef>true</linkXRef>
					<targetJdk>${java.version}</targetJdk>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
					<!-- 绑定pmd:pmd到site生命周期 -->
					<execution>
						<id>pmd-pmd-site</id>
						<phase>site</phase>
						<goals>
							<goal>pmd</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<!-- 需要使用阿里的一些xml文件，因此需要这里增加p3c的依赖 -->
					<dependency>
						<groupId>com.alibaba.p3c</groupId>
						<artifactId>p3c-pmd</artifactId>
						<version>1.3.0</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- mvn site时使用 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.7</version>
				<dependencies>
					<dependency>
						<groupId>org.apache.maven.doxia</groupId>
						<artifactId>doxia-site-renderer</artifactId>
						<version>1.9.2</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<!--				-->
				<!--				<configuration>-->
				<!--					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>-->
				<!--				</configuration>-->
			</plugin>

			<!-- findbugs插件 ：静态检查代码的错误-->
			<!--			<plugin>-->
			<!--				<groupId>org.codehaus.mojo</groupId>-->
			<!--				<artifactId>findbugs-maven-plugin</artifactId>-->
			<!--				<version>3.0.4</version>-->
			<!--				<configuration>-->
			<!--					&lt;!&ndash; 设置分析工作的等级，可以为Min、Default和Max &ndash;&gt;-->
			<!--					<effort>Low</effort>-->
			<!--					&lt;!&ndash; Low、Medium和High (Low最严格) &ndash;&gt;-->
			<!--					<threshold>Medium</threshold>-->
			<!--					<failOnError>true</failOnError>-->
			<!--					<xmlEncoding>UTF-8</xmlEncoding>-->
			<!--					<xmlOutput>true</xmlOutput>-->
			<!--					<xmlOutputDirectory>target/site</xmlOutputDirectory>-->
			<!--					<findbugsXmlOutputDirectory>target</findbugsXmlOutputDirectory>-->
			<!--					<includeTests>false</includeTests>-->
			<!--					<findbugsXmlOutput>true</findbugsXmlOutput>-->
			<!--					&lt;!&ndash;findbugs需要忽略的错误的配置文件&ndash;&gt;-->
			<!--					<excludeFilterFile>style/findbugs-exclude-filter.xml</excludeFilterFile>-->

			<!--				</configuration>-->
			<!--				<executions>-->
			<!--					<execution>-->
			<!--						<id>run-findbugs</id>-->
			<!--						&lt;!&ndash; 在install 阶段触发执行findbugs检查，比如执行 mvn clean package&ndash;&gt;-->
			<!--						<phase>install</phase>-->
			<!--						<goals>-->
			<!--							<goal>check</goal>-->
			<!--						</goals>-->
			<!--					</execution>-->
			<!--				</executions>-->
			<!--			</plugin>-->
			<!-- bug检查 -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>4.5.3.0</version>

				<configuration>
					<plugins>
						<!--扩展查询漏洞插件 -->
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>1.10.1</version>
						</plugin>


					</plugins>
					<!-- 设置分析工作的等级，可以为Min、Default和Max -->
					<effort>Low</effort>
					<!-- Low、Medium和High (Low最严格) -->
					<threshold>Medium</threshold>
					<failOnError>true</failOnError>
					<xmlEncoding>UTF-8</xmlEncoding>


					<!--					<findbugsXmlOutputDirectory>target</findbugsXmlOutputDirectory>-->
					<!--					<spotbugsXmlOutputDirectory>target</spotbugsXmlOutputDirectory>-->
					<spotbugsXmlOutput>true</spotbugsXmlOutput>
					<includeTests>false</includeTests>
					<!--					<findbugsXmlOutput>true</findbugsXmlOutput>-->
					<!--findbugs需要忽略的错误的配置文件-->
					<excludeFilterFile>style/findbugs-exclude-filter.xml</excludeFilterFile>

				</configuration>
				<executions>
					<execution>
						<id>check</id>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>com.github.spotbugs</groupId>
						<artifactId>spotbugs</artifactId>
						<version>4.5.3</version>
					</dependency>
				</dependencies>
			</plugin>

			<!--检测代码覆盖率的插件 jacoco-->
			<!--			<plugin>-->
			<!--				<groupId>org.jacoco</groupId>-->
			<!--				<artifactId>jacoco-maven-plugin</artifactId>-->
			<!--				<version>0.7.8</version>-->
			<!--				<executions>-->
			<!--					<execution>-->
			<!--						<id>prepare-agent</id>-->
			<!--						<goals>-->
			<!--							<goal>prepare-agent</goal>-->
			<!--						</goals>-->
			<!--					</execution>-->
			<!--					<execution>-->
			<!--						<id>check</id>-->
			<!--						<goals>-->
			<!--							<goal>check</goal>-->
			<!--						</goals>-->
			<!--					</execution>-->
			<!--					<execution>-->
			<!--						<id>report</id>-->
			<!--						<phase>prepare-package</phase>-->
			<!--						<goals>-->
			<!--							<goal>report</goal>-->
			<!--						</goals>-->
			<!--					</execution>-->
			<!--				</executions>-->

			<!--				&lt;!&ndash; Configuration 里面写配置信息 &ndash;&gt;-->
			<!--				<configuration>-->
			<!--					&lt;!&ndash; rules里面指定覆盖规则 &ndash;&gt;-->
			<!--					<rules>-->
			<!--						<rule implementation="org.jacoco.maven.RuleConfiguration">-->
			<!--							<element>BUNDLE</element>-->
			<!--							<limits>-->
			<!--								&lt;!&ndash; 指定方法覆盖到80% &ndash;&gt;-->
			<!--								<limit implementation="org.jacoco.report.check.Limit">-->
			<!--									<counter>METHOD</counter>-->
			<!--									<value>COVEREDRATIO</value>-->
			<!--									<minimum>0.50</minimum>-->
			<!--								</limit>-->
			<!--								&lt;!&ndash; 指定指令覆盖到80% &ndash;&gt;-->
			<!--								<limit implementation="org.jacoco.report.check.Limit">-->
			<!--									<counter>INSTRUCTION</counter>-->
			<!--									<value>COVEREDRATIO</value>-->
			<!--									<minimum>0.40</minimum>-->
			<!--								</limit>-->
			<!--								&lt;!&ndash; 指定行覆盖到80% &ndash;&gt;-->
			<!--								<limit implementation="org.jacoco.report.check.Limit">-->
			<!--									<counter>LINE</counter>-->
			<!--									<value>COVEREDRATIO</value>-->
			<!--									<minimum>0.40</minimum>-->
			<!--								</limit>-->
			<!--								&lt;!&ndash; 指定类覆盖到100%，不能遗失任何类 &ndash;&gt;-->
			<!--								<limit implementation="org.jacoco.report.check.Limit">-->
			<!--									<counter>CLASS</counter>-->
			<!--									<value>MISSEDCOUNT</value>-->
			<!--									<maximum>0</maximum>-->
			<!--								</limit>-->

			<!--							</limits>-->
			<!--						</rule>-->
			<!--					</rules>-->
			<!--				</configuration>-->
			<!--			</plugin>-->
		</plugins>


	</build>
	<repositories>
		<repository>
			<id>central</id>
			<name>central</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>central</id>
			<name>central</name>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<reporting>
		<plugins>
			<!-- 用于生成错误到代码内容的链接 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.14.0</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<!--							<report>dependencies</report>-->
							<report>index</report>
						</reports>
					</reportSet>
				</reportSets>
				<!--				-->
				<!--				<configuration>-->
				<!--					<dependencyDetailsEnabled>false</dependencyDetailsEnabled>-->
				<!--				</configuration>-->
			</plugin>
		</plugins>
	</reporting>
</project>